{"title":"09 - DICTIONARIES","markdown":{"yaml":{"title":"09 - DICTIONARIES"},"headingText":"Study Guide for Python Programming: Unit on Dictionaries","containsRefs":false,"markdown":"\n\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\n![](BertBoris.jpg)\n\nHere is a Dictionary of dog emotions:\n\n{\"Boris\": \"mild confusion\", \"Bert\": \"cape fueled rage\"}\n\n:::\n\n::: {#second-column}\n\n### List Syntax\n\nBoris made a summary of the syntax for each of the Python dictionary functions in the study guide:\n\n\n- `keys()`\n  - Returns a view object displaying a list of all the keys in the dictionary.\n  - Syntax: `dictionary.keys()`\n\n- `values()`\n  - Returns a view object containing a list of all the values in the dictionary.\n  - Syntax: `dictionary.values()`\n\n- `get()`\n  - Returns the value for the specified key if the key is in the dictionary.\n  - Syntax: `dictionary.get(key, default)`\n  - The `default` parameter is optional and provides a value to return if the key is not found. If not provided, it defaults to `None`.\n\n:::\n\n::::\n\n## Key Concepts\n\n### Basic Concepts of Dictionaries\n- **Key-Value Pairs**: Dictionaries store data as key-value pairs.\n- **Mutability**: Python dictionaries are mutable, meaning their values can be changed after creation.\n- **Accessing Values**: Values in a dictionary are accessed via keys, not indices (e.g., `dict[key]`).\n\n### Basic Dictionary Operations\n- **Creating a Dictionary**: Dictionaries are created with curly braces `{}` or the `dict()` constructor.\n- **Updating Values**: Change the value of an item by referencing its key (e.g., `dict[key] = new_value`).\n- **Handling `KeyError`**: Occurs when a key is not found in the dictionary.\n\n### Dictionary Methods\n- **Useful Methods**: `get()`, `keys()`, `values()`, `del` for deleting a key.\n- **Handling `KeyError` with `get()`**: Avoids an error by returning `None` if the key is not found.\n\n### Lists vs. Dictionaries\n- **When to Use**: Lists are for collections of similar items; dictionaries are for storing records with different types of information.\n\n### Lists of Dictionaries\n- **Representing Complex Data Structures**: Useful for storing multiple records (e.g., a list of student records).\n- **Accessing Data**: Chaining indices and keys (e.g., `students[0]['Name']`).\n\n### JSON and Dictionaries\n- **JSON**: A standard format for data interchange, closely resembling Python dictionaries.\n- **Serializing and Deserializing**: Converting between JSON strings and Python dictionaries.\n- **Python's `json` Module**: Used for loading and saving dictionaries to and from JSON.\n\n## Practice Questions\n\n6. **What is the value returned by `font.get('Size')` if `font` is a dictionary defined as `font = {'Name': 'Arial'}`?**\n   - A. `None`\n   - B. `KeyError`\n   - C. `0`\n   - D. `'Arial'`\n\n7. **What does the following code do? `x['new_key'] = 'new_value'` assuming `x` is a dictionary?**\n   - A. Throws an error because 'new_key' does not exist.\n   - B. Adds a new key-value pair to the dictionary.\n   - C. Changes the value of an existing key.\n   - D. Does nothing to the dictionary.\n\n8. **If `student = {'Name': 'John', 'Age': 21}`, what will `student['Age'] = 22` do?**\n   - A. Adds a new key 'Age' with the value 22.\n   - B. Changes the value of the 'Age' key to 22.\n   - C. Throws a KeyError.\n   - D. Creates a new dictionary with 'Age' set to 22.\n\n9. **In the context of dictionaries, what does the `del` keyword do?**\n   - A. Deletes the entire dictionary.\n   - B. Deletes a specified key-value pair.\n   - C. Deletes the value of a specified key.\n   - D. Clears all values leaving an empty dictionary.\n\n10. **What is the result of `len(s)` where `s = [{'a': 1}, {'b': 2}, {'c': 3}]`?**\n    - A. `3`\n    - B. `6`\n    - C. `2`\n    - D. `9`\n\n\n11. **What is the output of the following code?**\n\n    ```python\n    x = {'a': 5, 'b': {'c': 2, 'd': 4}}\n    print(x['b']['d'])\n    ```\n    A. `5`\n    B. `{'c': 2, 'd': 4}`\n    C. `2`\n    D. `4`\n\n12. **What is the output of the following code?**\n\n    ```python\n    x = {'a': [1, 2], 'b': [3, 4]}\n    x['a'].append(3)\n    print(x['a'])\n    ```\n    A. `[1, 2]`\n    B. `[1, 2, 3]`\n    C. `[3, 4, 3]`\n    D. `KeyError`\n\n13. **What is the output of the following code?**\n\n    ```python\n    x = {'a': 'hello', 'b': 'world'}\n    print('a' in x)\n    ```\n    A. `True`\n    B. `False`\n    C. `'hello'`\n    D. `KeyError`\n\n14. **What happens when the following code is executed?**\n\n    ```python\n    x = {'a': 1, 'b': 2}\n    del x['a']\n    print(x)\n    ```\n    A. `{'a': 1}`\n    B. `{'b': 2}`\n    C. `{1, 2}`\n    D. `KeyError`\n\n15. **What is the result of the following code?**\n\n    ```python\n    x = {'a': [1, 2, 3], 'b': [4, 5, 6]}\n    print(len(x))\n    ```\n    A. `2`\n    B. `3`\n    C. `6`\n    D. `KeyError`\n\n\n\n\n### Correct Answers and Explanations\n\n6. **Answer: A. `None`**\n   - **Explanation**: The `get()` method returns `None` if the key is not found in the dictionary.\n\n7. **Answer: B. Adds a new key-value pair to the dictionary.**\n   - **Explanation**: If the key does not exist, it adds the key-value pair to the dictionary.\n\n8. **Answer: B. Changes the value of the 'Age' key to 22.**\n   - **Explanation**: Since the 'Age' key exists, it updates its value to 22.\n\n9. **Answer: B. Deletes a specified key-value pair.**\n   - **Explanation**: The `del` keyword removes a specific key-value pair from a dictionary.\n\n10. **Answer: A. `3`**\n    - **Explanation**: The `len()` function returns the number of items (dictionaries in this case) in the list `s`, which is 3.\n\n\n11. **Answer: D. `4`**\n    - **Explanation**: The code retrieves the value of key 'd' within the nested dictionary associated with key 'b'.\n\n12. **Answer: B. `[1, 2, 3]`**\n    - **Explanation**: The `append()` method adds the element `3` to the list associated with key 'a'.\n\n13. **Answer: A. `True`**\n    - **Explanation**: The `in` operator checks if 'a' is a key in the dictionary `x`, which it is.\n\n14. **Answer: B. `{'b': 2}`**\n    - **Explanation**: The `del` statement removes the key 'a' and its value from the dictionary, leaving only `{'b': 2}`.\n\n15. **Answer: A. `2`**\n    - **Explanation**: The `len()` function returns the number of key-value pairs in the dictionary `x`, which is 2.\n","srcMarkdownNoYaml":"\n\n# Study Guide for Python Programming: Unit on Dictionaries\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\n![](BertBoris.jpg)\n\nHere is a Dictionary of dog emotions:\n\n{\"Boris\": \"mild confusion\", \"Bert\": \"cape fueled rage\"}\n\n:::\n\n::: {#second-column}\n\n### List Syntax\n\nBoris made a summary of the syntax for each of the Python dictionary functions in the study guide:\n\n\n- `keys()`\n  - Returns a view object displaying a list of all the keys in the dictionary.\n  - Syntax: `dictionary.keys()`\n\n- `values()`\n  - Returns a view object containing a list of all the values in the dictionary.\n  - Syntax: `dictionary.values()`\n\n- `get()`\n  - Returns the value for the specified key if the key is in the dictionary.\n  - Syntax: `dictionary.get(key, default)`\n  - The `default` parameter is optional and provides a value to return if the key is not found. If not provided, it defaults to `None`.\n\n:::\n\n::::\n\n## Key Concepts\n\n### Basic Concepts of Dictionaries\n- **Key-Value Pairs**: Dictionaries store data as key-value pairs.\n- **Mutability**: Python dictionaries are mutable, meaning their values can be changed after creation.\n- **Accessing Values**: Values in a dictionary are accessed via keys, not indices (e.g., `dict[key]`).\n\n### Basic Dictionary Operations\n- **Creating a Dictionary**: Dictionaries are created with curly braces `{}` or the `dict()` constructor.\n- **Updating Values**: Change the value of an item by referencing its key (e.g., `dict[key] = new_value`).\n- **Handling `KeyError`**: Occurs when a key is not found in the dictionary.\n\n### Dictionary Methods\n- **Useful Methods**: `get()`, `keys()`, `values()`, `del` for deleting a key.\n- **Handling `KeyError` with `get()`**: Avoids an error by returning `None` if the key is not found.\n\n### Lists vs. Dictionaries\n- **When to Use**: Lists are for collections of similar items; dictionaries are for storing records with different types of information.\n\n### Lists of Dictionaries\n- **Representing Complex Data Structures**: Useful for storing multiple records (e.g., a list of student records).\n- **Accessing Data**: Chaining indices and keys (e.g., `students[0]['Name']`).\n\n### JSON and Dictionaries\n- **JSON**: A standard format for data interchange, closely resembling Python dictionaries.\n- **Serializing and Deserializing**: Converting between JSON strings and Python dictionaries.\n- **Python's `json` Module**: Used for loading and saving dictionaries to and from JSON.\n\n## Practice Questions\n\n6. **What is the value returned by `font.get('Size')` if `font` is a dictionary defined as `font = {'Name': 'Arial'}`?**\n   - A. `None`\n   - B. `KeyError`\n   - C. `0`\n   - D. `'Arial'`\n\n7. **What does the following code do? `x['new_key'] = 'new_value'` assuming `x` is a dictionary?**\n   - A. Throws an error because 'new_key' does not exist.\n   - B. Adds a new key-value pair to the dictionary.\n   - C. Changes the value of an existing key.\n   - D. Does nothing to the dictionary.\n\n8. **If `student = {'Name': 'John', 'Age': 21}`, what will `student['Age'] = 22` do?**\n   - A. Adds a new key 'Age' with the value 22.\n   - B. Changes the value of the 'Age' key to 22.\n   - C. Throws a KeyError.\n   - D. Creates a new dictionary with 'Age' set to 22.\n\n9. **In the context of dictionaries, what does the `del` keyword do?**\n   - A. Deletes the entire dictionary.\n   - B. Deletes a specified key-value pair.\n   - C. Deletes the value of a specified key.\n   - D. Clears all values leaving an empty dictionary.\n\n10. **What is the result of `len(s)` where `s = [{'a': 1}, {'b': 2}, {'c': 3}]`?**\n    - A. `3`\n    - B. `6`\n    - C. `2`\n    - D. `9`\n\n\n11. **What is the output of the following code?**\n\n    ```python\n    x = {'a': 5, 'b': {'c': 2, 'd': 4}}\n    print(x['b']['d'])\n    ```\n    A. `5`\n    B. `{'c': 2, 'd': 4}`\n    C. `2`\n    D. `4`\n\n12. **What is the output of the following code?**\n\n    ```python\n    x = {'a': [1, 2], 'b': [3, 4]}\n    x['a'].append(3)\n    print(x['a'])\n    ```\n    A. `[1, 2]`\n    B. `[1, 2, 3]`\n    C. `[3, 4, 3]`\n    D. `KeyError`\n\n13. **What is the output of the following code?**\n\n    ```python\n    x = {'a': 'hello', 'b': 'world'}\n    print('a' in x)\n    ```\n    A. `True`\n    B. `False`\n    C. `'hello'`\n    D. `KeyError`\n\n14. **What happens when the following code is executed?**\n\n    ```python\n    x = {'a': 1, 'b': 2}\n    del x['a']\n    print(x)\n    ```\n    A. `{'a': 1}`\n    B. `{'b': 2}`\n    C. `{1, 2}`\n    D. `KeyError`\n\n15. **What is the result of the following code?**\n\n    ```python\n    x = {'a': [1, 2, 3], 'b': [4, 5, 6]}\n    print(len(x))\n    ```\n    A. `2`\n    B. `3`\n    C. `6`\n    D. `KeyError`\n\n\n\n\n### Correct Answers and Explanations\n\n6. **Answer: A. `None`**\n   - **Explanation**: The `get()` method returns `None` if the key is not found in the dictionary.\n\n7. **Answer: B. Adds a new key-value pair to the dictionary.**\n   - **Explanation**: If the key does not exist, it adds the key-value pair to the dictionary.\n\n8. **Answer: B. Changes the value of the 'Age' key to 22.**\n   - **Explanation**: Since the 'Age' key exists, it updates its value to 22.\n\n9. **Answer: B. Deletes a specified key-value pair.**\n   - **Explanation**: The `del` keyword removes a specific key-value pair from a dictionary.\n\n10. **Answer: A. `3`**\n    - **Explanation**: The `len()` function returns the number of items (dictionaries in this case) in the list `s`, which is 3.\n\n\n11. **Answer: D. `4`**\n    - **Explanation**: The code retrieves the value of key 'd' within the nested dictionary associated with key 'b'.\n\n12. **Answer: B. `[1, 2, 3]`**\n    - **Explanation**: The `append()` method adds the element `3` to the list associated with key 'a'.\n\n13. **Answer: A. `True`**\n    - **Explanation**: The `in` operator checks if 'a' is a key in the dictionary `x`, which it is.\n\n14. **Answer: B. `{'b': 2}`**\n    - **Explanation**: The `del` statement removes the key 'a' and its value from the dictionary, leaving only `{'b': 2}`.\n\n15. **Answer: A. `2`**\n    - **Explanation**: The `len()` function returns the number of key-value pairs in the dictionary `x`, which is 2.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Dictionaries.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title":"09 - DICTIONARIES"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
{"title":"10 - HTTP","markdown":{"yaml":{"title":"10 - HTTP"},"headingText":"Study Guide for Python Programming: Unit on HTTP","containsRefs":false,"markdown":"\n\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\nPickle1.jpg)\n\nPickle cares not for HTTP!\n\n\n\n:::\n\n::: {#second-column}\n\n### HTTP GET Syntax\n\nPickle made a summary of the `requests.get()` function in Python:\n\n- **Purpose**: \n  - Used to send an HTTP GET request to a specified URL.\n\n- **Basic Syntax**:\n  - `response = requests.get(url, params=None, **kwargs)`\n\n- **Parameters**:\n  - `url`: The URL to which the GET request is sent.\n  - `params`: (Optional) A dictionary or bytes to be sent in the query string of the URL.\n  - `**kwargs`: (Optional) Additional arguments that `requests` can accept, such as `headers`, `cookies`, `auth` (authentication), `timeout`, and `proxies`.\n\n- **Return Value**:\n  - Returns a `Response` object that contains the server's response to the HTTP request.\n\n- **Key Attributes of Response Object**:\n  - `status_code`: The HTTP status code of the response.\n  - `text`: The content of the response in Unicode.\n  - `content`: The content of the response in bytes.\n  - `headers`: A dictionary-like object containing the response headers.\n  - `url`: The URL of the response.\n  - `json()`: A method to decode the JSON response content into a dictionary.\n\n- **Common Usage**:\n  - To retrieve data from a specified resource.\n  - To interact with web APIs that return data in various formats, commonly JSON.\n  - To send additional information through query parameters.\n\n- **Error Handling**:\n  - It's important to check the `status_code` or use `response.raise_for_status()` to handle potential HTTP errors gracefully.\n\n- **Example**:\n  ```python\n  import requests\n  response = requests.get(\"https://api.example.com/data\", params={\"key1\": \"value1\", \"key2\": \"value2\"})\n  if response.status_code == 200:\n      data = response.json()\n  ```\n\n:::\n\n::::\n\n# Study Guide for Python Programming: Unit on HTTP\n\n## Key Concepts\n\n### HTTP: The Protocol of the Web\n- **URL Requests**: Making a request by typing a URL in a browser.\n- **Stateless Protocol**: Each HTTP request is independent of others.\n- **Response**: Contains a status code and content (often HTML).\n\n### HTTP Request Verbs\n- **GET**: Retrieves resources.\n- **POST**: Sends large data payloads as input.\n- **PUT**: Used for updates.\n- **DELETE**: Used to delete resources.\n\n### HTTP Response Status Codes\n- **1xx**: Informational.\n- **2xx**: Success (e.g., 200 OK).\n- **3xx**: Redirection.\n- **4xx**: Client Error (e.g., 404 Not Found).\n- **5xx**: Server Error.\n\n### Sending Data over HTTP\n- **In the URL**: E.g., `GET http://www.someapi.com/user/45`.\n- **On the Query String**: Key-value pairs on the URL, e.g., `GET http://www.someapi.com?user=45`.\n- **In the Request Header**: Key-value pairs in the HTTP header.\n- **In the Body of an HTTP Post**: Data in any format in the body of a POST request.\n\n### Python Requests Module\n- **Usage**: To make HTTP requests in Python.\n- **Handling Responses**: Interpreting the response data, including status codes and content.\n- **De-serializing JSON Output**: Converting JSON data from the response into Python data structures.\n\n### Practical Applications\n- **Geocoding**: Converting addresses to GPS coordinates.\n- **Weather Data API**: Retrieving weather forecasts and related information.\n\n## Practice Questions\n\n11. **What HTTP status code represents a successful response?**\n    A. 404\n    B. 500\n    C. 200\n    D. 302\n\n12. **What does `requests.get()` do in Python?**\n    A. Sends a POST request to a URL.\n    B. Requests a resource using the GET method.\n    C. Deletes a resource at a specified URL.\n    D. Updates a resource.\n\n13. **In HTTP, which method is commonly used for updating a resource?**\n    A. GET\n    B. POST\n    C. PUT\n    D. DELETE\n\n14. **What Python module is commonly used for sending HTTP requests?**\n    A. urllib\n    B. requests\n    C. http\n    D. api\n\n15. **When using the requests module, what object contains the response from an HTTP request?**\n    A. The URL object\n    B. The response object\n    C. The header object\n    D. The data object\n\n---\n\n### Correct Answers and Explanations\n\n11. **Answer: C. 200**\n    - **Explanation**: HTTP status code 200 is the standard response for a successful HTTP request.\n\n12. **Answer: B. Requests a resource using the GET method.**\n    - **Explanation**: The `requests.get()` function in Python is used to make an HTTP GET request to a specified URL.\n\n13. **Answer: C. PUT**\n    - **Explanation**: The HTTP PUT method is typically used for updating an existing resource on the server.\n\n14. **Answer: B. requests**\n    - **Explanation**: The `requests` module in Python is widely used for making HTTP requests.\n\n15. **Answer: B. The response object**\n    - **Explanation**: In the `requests` module, the response from an HTTP request is stored in a response object, which contains the status code, headers, and body of the response.\n","srcMarkdownNoYaml":"\n\n# Study Guide for Python Programming: Unit on HTTP\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\nPickle1.jpg)\n\nPickle cares not for HTTP!\n\n\n\n:::\n\n::: {#second-column}\n\n### HTTP GET Syntax\n\nPickle made a summary of the `requests.get()` function in Python:\n\n- **Purpose**: \n  - Used to send an HTTP GET request to a specified URL.\n\n- **Basic Syntax**:\n  - `response = requests.get(url, params=None, **kwargs)`\n\n- **Parameters**:\n  - `url`: The URL to which the GET request is sent.\n  - `params`: (Optional) A dictionary or bytes to be sent in the query string of the URL.\n  - `**kwargs`: (Optional) Additional arguments that `requests` can accept, such as `headers`, `cookies`, `auth` (authentication), `timeout`, and `proxies`.\n\n- **Return Value**:\n  - Returns a `Response` object that contains the server's response to the HTTP request.\n\n- **Key Attributes of Response Object**:\n  - `status_code`: The HTTP status code of the response.\n  - `text`: The content of the response in Unicode.\n  - `content`: The content of the response in bytes.\n  - `headers`: A dictionary-like object containing the response headers.\n  - `url`: The URL of the response.\n  - `json()`: A method to decode the JSON response content into a dictionary.\n\n- **Common Usage**:\n  - To retrieve data from a specified resource.\n  - To interact with web APIs that return data in various formats, commonly JSON.\n  - To send additional information through query parameters.\n\n- **Error Handling**:\n  - It's important to check the `status_code` or use `response.raise_for_status()` to handle potential HTTP errors gracefully.\n\n- **Example**:\n  ```python\n  import requests\n  response = requests.get(\"https://api.example.com/data\", params={\"key1\": \"value1\", \"key2\": \"value2\"})\n  if response.status_code == 200:\n      data = response.json()\n  ```\n\n:::\n\n::::\n\n# Study Guide for Python Programming: Unit on HTTP\n\n## Key Concepts\n\n### HTTP: The Protocol of the Web\n- **URL Requests**: Making a request by typing a URL in a browser.\n- **Stateless Protocol**: Each HTTP request is independent of others.\n- **Response**: Contains a status code and content (often HTML).\n\n### HTTP Request Verbs\n- **GET**: Retrieves resources.\n- **POST**: Sends large data payloads as input.\n- **PUT**: Used for updates.\n- **DELETE**: Used to delete resources.\n\n### HTTP Response Status Codes\n- **1xx**: Informational.\n- **2xx**: Success (e.g., 200 OK).\n- **3xx**: Redirection.\n- **4xx**: Client Error (e.g., 404 Not Found).\n- **5xx**: Server Error.\n\n### Sending Data over HTTP\n- **In the URL**: E.g., `GET http://www.someapi.com/user/45`.\n- **On the Query String**: Key-value pairs on the URL, e.g., `GET http://www.someapi.com?user=45`.\n- **In the Request Header**: Key-value pairs in the HTTP header.\n- **In the Body of an HTTP Post**: Data in any format in the body of a POST request.\n\n### Python Requests Module\n- **Usage**: To make HTTP requests in Python.\n- **Handling Responses**: Interpreting the response data, including status codes and content.\n- **De-serializing JSON Output**: Converting JSON data from the response into Python data structures.\n\n### Practical Applications\n- **Geocoding**: Converting addresses to GPS coordinates.\n- **Weather Data API**: Retrieving weather forecasts and related information.\n\n## Practice Questions\n\n11. **What HTTP status code represents a successful response?**\n    A. 404\n    B. 500\n    C. 200\n    D. 302\n\n12. **What does `requests.get()` do in Python?**\n    A. Sends a POST request to a URL.\n    B. Requests a resource using the GET method.\n    C. Deletes a resource at a specified URL.\n    D. Updates a resource.\n\n13. **In HTTP, which method is commonly used for updating a resource?**\n    A. GET\n    B. POST\n    C. PUT\n    D. DELETE\n\n14. **What Python module is commonly used for sending HTTP requests?**\n    A. urllib\n    B. requests\n    C. http\n    D. api\n\n15. **When using the requests module, what object contains the response from an HTTP request?**\n    A. The URL object\n    B. The response object\n    C. The header object\n    D. The data object\n\n---\n\n### Correct Answers and Explanations\n\n11. **Answer: C. 200**\n    - **Explanation**: HTTP status code 200 is the standard response for a successful HTTP request.\n\n12. **Answer: B. Requests a resource using the GET method.**\n    - **Explanation**: The `requests.get()` function in Python is used to make an HTTP GET request to a specified URL.\n\n13. **Answer: C. PUT**\n    - **Explanation**: The HTTP PUT method is typically used for updating an existing resource on the server.\n\n14. **Answer: B. requests**\n    - **Explanation**: The `requests` module in Python is widely used for making HTTP requests.\n\n15. **Answer: B. The response object**\n    - **Explanation**: In the `requests` module, the response from an HTTP request is stored in a response object, which contains the status code, headers, and body of the response.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"HTTP.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title":"10 - HTTP"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
{"title":"12 - PANDAS","markdown":{"yaml":{"title":"12 - PANDAS"},"headingText":"Study Guide for Python Programming: Unit on Data Analysis","containsRefs":false,"markdown":"\n\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\n![](Lovey2.jpg)\n\nLovey kind of looks like a Panda?\n\n\n\n:::\n\n::: {#second-column}\n\n### Pandas Syntax\n\nHere's a bulleted list summarizing the syntax for the specified Pandas functions:\n\n- **loc**\n  - Accesses a group of rows and columns by labels or a boolean array.\n  - Syntax: `DataFrame.loc[<row_labels>, <column_labels>]`\n\n- **iloc**\n  - Accesses a group of rows and columns by integer index positions.\n  - Syntax: `DataFrame.iloc[<row_indices>, <column_indices>]`\n\n- **series()**\n  - Creates a Pandas Series from a list, array, or dictionary.\n  - Syntax: `pandas.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)`\n\n- **DataFrame()**\n  - Creates a DataFrame from a variety of input data structures like a 2D array, dictionary of arrays, Series, or another DataFrame.\n  - Syntax: `pandas.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)`\n\n- **read_csv()**\n  - Reads a CSV file into a DataFrame.\n  - Syntax: `pandas.read_csv(filepath_or_buffer, sep=',', delimiter=None, header='infer', names=None, index_col=None, usecols=None, ...)`\n\n- **Row / Column Filters**\n  - Used to filter the rows or columns of a DataFrame based on some condition or criteria.\n  - Syntax for Row Filter: `DataFrame[DataFrame['column_name'] <operator> <condition>]`\n  - Syntax for Column Filter: `DataFrame[['column_name1', 'column_name2', ...]]`\n\n- **to_records()**\n  - Converts DataFrame to a NumPy record array.\n  - Syntax: `DataFrame.to_records(index=True, column_dtypes=None, index_dtypes=None)`\n\n:::\n\n::::\n\n# Study Guide for Python Programming: Unit on Pandas\n\n## Key Concepts\n\n### Data Analysis\n- **Definition**: The process of applying logical techniques to describe, condense, recap, evaluate data, and illustrate information.\n- **Goals**: To discover useful information, provide insights, suggest conclusions, and support decision-making.\n\n### What is Pandas?\n- **Pandas Package**: A Python package for data analysis, providing built-in data structures for manipulating and analyzing data sets.\n- **Functionality**: Allows fetching data from various sources and tabulating it for analysis.\n- **Data Structures**: Includes Series and DataFrame, which simplify data manipulation.\n- **Documentation**: Extensive documentation available at [Pandas Documentation](http://pandas.pydata.org/pandas-docs/stable/).\n\n### Pandas: Essential Concepts\n- **Series**: A named Python list, similar to a dictionary with a list as a value.\n  - Example: `{‘grades’: [50, 90, 100, 45]}`\n- **DataFrame**: A dictionary of Series, representing a tabular data structure.\n  - Example: `{‘names’: [‘bob’, ‘ken’, ‘art’, ‘joe’], ‘grades’: [50, 90, 100, 45]}`\n\n### Basic Operations in Pandas\n- **Creating a DataFrame**: From a dictionary, CSV, JSON, HTML tables, or database queries.\n- **Column Selection**: Accessing specific columns in a DataFrame.\n- **Row Selection**: Using Boolean indexing to filter rows based on conditions.\n- **Data Manipulation**: Basic operations like row/column filters, handling null values, `head()`, `sample()`, and `value_counts`.\n\n### Data Loading Capabilities\n- **Reading Data**: Pandas can read data from CSV, Excel, delimited files, HTML tables, JSON, and API outputs.\n- **Data Exploration**: Once data is loaded into a DataFrame, it's easy to explore and manipulate.\n\n## Practice Questions\n\n21. **What Pandas data structure is similar to a Python dictionary?**\n    - A. DataFrame\n    - B. Series\n    - C. List\n    - D. Tuple\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. DataFrame\n\n**Explanation:** A DataFrame is a tabular data structure in Pandas, similar to a dictionary of Series.\n</details>\n\n\n22. **Which method in Pandas is used to read a CSV file into a DataFrame?**\n    - A. `pd.read_csv()`\n    - B. `pd.read_excel()`\n    - C. `pd.read_json()`\n    - D. `pd.read_html()`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. pd.read_csv()\n\n**Explanation:** The pd.read_csv() function is used in Pandas to read data from a CSV file into a DataFrame.\n</details>\n\n23. **How do you select a column named 'Age' from a DataFrame `df`?**\n    - A. `df['Age']`\n    - B. `df.Age`\n    - C. Both A and B\n    - D. `df(Age)`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** C. Both A and B\n\n**Explanation:** In Pandas, a column can be selected using either df['Age'] or df.Age.\n</details>\n\n24. **What is the output of `df.head(3)` where `df` is a Pandas DataFrame?**\n    - A. The first 3 columns of `df`\n    - B. The first 3 rows of `df`\n    - C. The last 3 rows of `df`\n    - D. The header row of `df`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** B. The first 3 rows of df\n\n**Explanation:** The head() method in Pandas returns the first N rows of the DataFrame, with df.head(3) returning the first 3 rows.\n</details>\n\n25. **In Pandas, how do you filter rows in DataFrame `df` where the column 'Sales' is greater than 100?**\n    - A. `df[df['Sales'] > 100]`\n    - B. `df('Sales' > 100)`\n    - C. `df.get('Sales' > 100)`\n    - D. `df.query('Sales > 100')`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. df[df['Sales'] > 100]\n\n**Explanation:** This syntax is used for Boolean indexing in Pandas, filtering rows where the ‘Sales’ column values are greater than 100.\n</details>\n\n","srcMarkdownNoYaml":"\n\n# Study Guide for Python Programming: Unit on Data Analysis\n\n:::: {layout=\"[ 40, 60 ]\"}\n\n::: {#first-column}\n![](Lovey2.jpg)\n\nLovey kind of looks like a Panda?\n\n\n\n:::\n\n::: {#second-column}\n\n### Pandas Syntax\n\nHere's a bulleted list summarizing the syntax for the specified Pandas functions:\n\n- **loc**\n  - Accesses a group of rows and columns by labels or a boolean array.\n  - Syntax: `DataFrame.loc[<row_labels>, <column_labels>]`\n\n- **iloc**\n  - Accesses a group of rows and columns by integer index positions.\n  - Syntax: `DataFrame.iloc[<row_indices>, <column_indices>]`\n\n- **series()**\n  - Creates a Pandas Series from a list, array, or dictionary.\n  - Syntax: `pandas.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)`\n\n- **DataFrame()**\n  - Creates a DataFrame from a variety of input data structures like a 2D array, dictionary of arrays, Series, or another DataFrame.\n  - Syntax: `pandas.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)`\n\n- **read_csv()**\n  - Reads a CSV file into a DataFrame.\n  - Syntax: `pandas.read_csv(filepath_or_buffer, sep=',', delimiter=None, header='infer', names=None, index_col=None, usecols=None, ...)`\n\n- **Row / Column Filters**\n  - Used to filter the rows or columns of a DataFrame based on some condition or criteria.\n  - Syntax for Row Filter: `DataFrame[DataFrame['column_name'] <operator> <condition>]`\n  - Syntax for Column Filter: `DataFrame[['column_name1', 'column_name2', ...]]`\n\n- **to_records()**\n  - Converts DataFrame to a NumPy record array.\n  - Syntax: `DataFrame.to_records(index=True, column_dtypes=None, index_dtypes=None)`\n\n:::\n\n::::\n\n# Study Guide for Python Programming: Unit on Pandas\n\n## Key Concepts\n\n### Data Analysis\n- **Definition**: The process of applying logical techniques to describe, condense, recap, evaluate data, and illustrate information.\n- **Goals**: To discover useful information, provide insights, suggest conclusions, and support decision-making.\n\n### What is Pandas?\n- **Pandas Package**: A Python package for data analysis, providing built-in data structures for manipulating and analyzing data sets.\n- **Functionality**: Allows fetching data from various sources and tabulating it for analysis.\n- **Data Structures**: Includes Series and DataFrame, which simplify data manipulation.\n- **Documentation**: Extensive documentation available at [Pandas Documentation](http://pandas.pydata.org/pandas-docs/stable/).\n\n### Pandas: Essential Concepts\n- **Series**: A named Python list, similar to a dictionary with a list as a value.\n  - Example: `{‘grades’: [50, 90, 100, 45]}`\n- **DataFrame**: A dictionary of Series, representing a tabular data structure.\n  - Example: `{‘names’: [‘bob’, ‘ken’, ‘art’, ‘joe’], ‘grades’: [50, 90, 100, 45]}`\n\n### Basic Operations in Pandas\n- **Creating a DataFrame**: From a dictionary, CSV, JSON, HTML tables, or database queries.\n- **Column Selection**: Accessing specific columns in a DataFrame.\n- **Row Selection**: Using Boolean indexing to filter rows based on conditions.\n- **Data Manipulation**: Basic operations like row/column filters, handling null values, `head()`, `sample()`, and `value_counts`.\n\n### Data Loading Capabilities\n- **Reading Data**: Pandas can read data from CSV, Excel, delimited files, HTML tables, JSON, and API outputs.\n- **Data Exploration**: Once data is loaded into a DataFrame, it's easy to explore and manipulate.\n\n## Practice Questions\n\n21. **What Pandas data structure is similar to a Python dictionary?**\n    - A. DataFrame\n    - B. Series\n    - C. List\n    - D. Tuple\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. DataFrame\n\n**Explanation:** A DataFrame is a tabular data structure in Pandas, similar to a dictionary of Series.\n</details>\n\n\n22. **Which method in Pandas is used to read a CSV file into a DataFrame?**\n    - A. `pd.read_csv()`\n    - B. `pd.read_excel()`\n    - C. `pd.read_json()`\n    - D. `pd.read_html()`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. pd.read_csv()\n\n**Explanation:** The pd.read_csv() function is used in Pandas to read data from a CSV file into a DataFrame.\n</details>\n\n23. **How do you select a column named 'Age' from a DataFrame `df`?**\n    - A. `df['Age']`\n    - B. `df.Age`\n    - C. Both A and B\n    - D. `df(Age)`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** C. Both A and B\n\n**Explanation:** In Pandas, a column can be selected using either df['Age'] or df.Age.\n</details>\n\n24. **What is the output of `df.head(3)` where `df` is a Pandas DataFrame?**\n    - A. The first 3 columns of `df`\n    - B. The first 3 rows of `df`\n    - C. The last 3 rows of `df`\n    - D. The header row of `df`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** B. The first 3 rows of df\n\n**Explanation:** The head() method in Pandas returns the first N rows of the DataFrame, with df.head(3) returning the first 3 rows.\n</details>\n\n25. **In Pandas, how do you filter rows in DataFrame `df` where the column 'Sales' is greater than 100?**\n    - A. `df[df['Sales'] > 100]`\n    - B. `df('Sales' > 100)`\n    - C. `df.get('Sales' > 100)`\n    - D. `df.query('Sales > 100')`\n\n<details>\n<summary>Click to see the answer</summary>\n\n**Answer:** A. df[df['Sales'] > 100]\n\n**Explanation:** This syntax is used for Boolean indexing in Pandas, filtering rows where the ‘Sales’ column values are greater than 100.\n</details>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"PANDAS.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"spacelab","title":"12 - PANDAS"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}